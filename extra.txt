<!DOCTYPE html>
<html>

<head>
    <title>Interactive Map</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        #map {
            height: 400px;
        }
    </style>
</head>

<body>
    <div id="map"></div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        var context = {{ context| safe }};
        var polygonData = context.polygon_data;
        var lat = context.important_coordinates.middle_lat;
        var long = context.important_coordinates.middle_long;
        console.log(lat, long)
        var map = L.map('map').setView([lat, long], 50);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
        }).addTo(map);
        // var marker = L.marker([lat, long]).addTo(map);
        // marker.bindPopup("<b>Hello!</b><br>" + lat + ", " + long).openPopup();
        for (var color in polygonData) {
            // alert(color)
            if (polygonData.hasOwnProperty(color)) {
                var colorPolygonData = polygonData[color];
                for (var i = 0; i < colorPolygonData.length; i++) {
                    var coordinates = colorPolygonData[i];
                    console.log(coordinates)
                    var polygon = L.polygon(coordinates, {
                        fillColor: color,
                        color: color,
                        fillOpacity: 0.5
                    }).addTo(map);
                    // Add popup content if needed
                    polygon.bindPopup('Popup content goes here');
                }
            }
        }


        // Add a polygon marker
        // var redPolygon = L.polygon([
        //     [lat + 0.0005, long - 0.0005],
        //     [lat + 0.0005, long + 0.0005],
        //     [lat - 0.0005, long + 0.0005],
        //     [lat - 0.0005, long - 0.0005],
        // ], {
        //     fillColor: 'red', color: 'red', fillOpacity: 0.3
        // }).addTo(map);

        // var greenPolygon = L.polygon([
        //     [lat + 0.0006, long - 0.0006],
        //     [lat + 0.0006, long + 0.0006],
        //     [lat - 0.0006, long + 0.0006],
        //     [lat - 0.0006, long - 0.0006],
        // ], { fillColor: 'green', color: "green", fillOpacity: 0.5 }).addTo(map);

        // var yellowPolygon = L.polygon([
        //     [lat + 0.0008, long - 0.0008],
        //     [lat + 0.0008, long + 0.0008],
        //     [lat - 0.0008, long + 0.0008],
        //     [lat - 0.0008, long - 0.0008],
        // ], { fillColor: 'yellow', color: "yellow", fillOpacity: 0.5 }).addTo(map);

        // var orangePolygon = L.polygon([
        //     [lat + 0.0010, long - 0.0010],
        //     [lat + 0.0010, long + 0.0010],
        //     [lat - 0.0010, long + 0.0010],
        //     [lat - 0.0010, long - 0.0010],
        // ], { fillColor: 'orange', color: "orange", fillOpacity: 0.5 }).addTo(map);
        var toggler = document.createElement('div');
        toggler.innerHTML = `
    <input type="checkbox" id="redToggle" onclick="togglePolygon('red')"> Red
    <input type="checkbox" id="greenToggle" onclick="togglePolygon('green')"> Green
    <input type="checkbox" id="yellowToggle" onclick="togglePolygon('yellow')"> Yellow
    <input type="checkbox" id="orangeToggle" onclick="togglePolygon('orange')"> Orange
`;

        toggler.style.backgroundColor = 'white';
        toggler.style.padding = '10px';
        toggler.style.position = 'absolute';
        toggler.style.bottom = '10px';
        toggler.style.left = '10px';

        document.body.appendChild(toggler);

        // Function to toggle visibility of polygons based on color
        function togglePolygon(color) {
            switch (color) {
                case 'red':
                    redPolygon.setStyle({ fillOpacity: redPolygon.options.fillOpacity ? 0 : 0.3 });
                    redPolygon.setStyle({ opacity: redPolygon.options.opacity ? 0 : 1 });
                    break;
                case 'green':
                    greenPolygon.setStyle({ fillOpacity: greenPolygon.options.fillOpacity ? 0 : 0.3 });
                    greenPolygon.setStyle({ opacity: greenPolygon.options.opacity ? 0 : 1 });
                    break;
                case 'yellow':
                    yellowPolygon.setStyle({ opacity: yellowPolygon.options.opacity ? 0 : 1 });
                    yellowPolygon.setStyle({ fillOpacity: yellowPolygon.options.fillOpacity ? 0 : 0.3 });
                    break;
                case 'orange':
                    orangePolygon.setStyle({ fillOpacity: orangePolygon.options.fillOpacity ? 0 : 0.3 });
                    orangePolygon.setStyle({ opacity: orangePolygon.options.opacity ? 0 : 1 });
                    break;
                default:
                    break;
            }
        }
    </script>
</body>

</html>